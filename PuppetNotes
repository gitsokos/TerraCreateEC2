✏️ Note: Most of the text scrolling by is from a process called pluginsync. During pluginsync, any extensions installed on the server (such as custom facts, resource types, or providers) are copied to the agent before the Puppet run. This ensures that the agent has the tools it needs to apply the catalog.


@pe-101-lab-2-1 --------------------------------------------------------------------------------->

/etc/puppetlabs/puppet/autosign.rb:

#!/opt/puppetlabs/puppet/bin/ruby
#
# A note on logging:
#   This script's stderr and stdout are only shown at the DEBUG level
#   of the server's logs. This means you won't see the error messages
#   in puppetserver.log by default. All you'll see is the exit code.
#
#   https://docs.puppet.com/puppet/latest/ssl_autosign.html#policy-executable-api
#
# Exit Codes:
#   0 - A matching challengePassword was found.
#   1 - No challengePassword was found.
#   2 - The wrong challengePassword was found.
#
require 'puppet/ssl'

csr = Puppet::SSL::CertificateRequest.from_s(STDIN.read)
psk = File.read('/etc/puppetlabs/puppet/psk').chomp.strip

if pass = csr.custom_attributes.find do |attribute|
     ['challengePassword', '1.2.840.113549.1.9.7'].include? attribute['oid']
   end
else
  puts 'No challengePassword found. Rejecting certificate request.'
  exit 1
end

if pass['value'] == psk
  exit 0
else
  puts "challengePassword does not match: #{pass['value']}"
  exit 2
end

/etc/puppetlabs/puppet/psk:
PASSWORD_FOR_AUTOSIGNER_SCRIPT

puppet config set autosign /etc/puppetlabs/puppet/autosign.rb --section server

# uri='https://puppet:8140/packages/current/install.bash'
root@nixagent:~# curl --insecure "$uri" | bash -s custom_attributes:challengePassword=PASSWORD_FOR_AUTOSIGNER_SCRIPT

@pe-101-lab-2-1 ---------------------------------------------------------------------------------<

@pe-101-lab-3-0 --------------------------------------------------------------------------------->

mkdir -p /etc/puppetlabs/facter/facts.d

/etc/puppetlabs/facter/facts.d/datacenter.sh:

#!/usr/bin/env bash
echo "datacenter=<DATACENTER>"

puppet agent -t # @server

@pe-101-lab-3-0 ---------------------------------------------------------------------------------<


@pe-201-lab-1-0 --------------------------------------------------------------------------------->

puppet config print client_datadir
/opt/puppetlabs/puppet/cache/client_data
jq '.resources[] | select(.type=="Service")' /opt/puppetlabs/puppet/cache/client_data/catalog/*.json

@pe-201-lab-1-0 ---------------------------------------------------------------------------------<
